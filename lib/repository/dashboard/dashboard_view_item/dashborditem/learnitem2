
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:greenlive/models/itemsmodels.dart';

class LearnItem2 extends StatelessWidget {
  final List <Items> item;
  final bool _changeItemColor1 = false;

  const LearnItem2({super.key, required this.item, required int nom});

  @override
  Widget build(BuildContext context) {

    
  
    return Scaffold(
       backgroundColor: Color.fromARGB(255, 255, 253, 253),
      body: SafeArea(
        
        child: SingleChildScrollView(
          child: Column(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            
            Column(
              children: [

                Hero(tag: 'item', child: navigation_plan(),),

                 // ALL ITEM NAME PLACE 

                 all_item_name("Plant Name"),    
 
                 // ITEM PLACE

                item_size(),

              ],
            ),
               
             // FOR ITEM MORE DESCRIPTION
            Column(
              
              children: [
                Container(
                  height: 400,
                  width: MediaQuery.of(context).size.width,
                  decoration: const BoxDecoration(
                    color: Color.fromARGB(255, 232, 231, 231),
                    borderRadius: BorderRadius.only(topLeft: Radius.circular(20),topRight: Radius.circular(20))
                  ),
                  child: Column(
                    children: [
                      item_size_more_info()
                    ],
                  ),
                ),
              ],
            ),
            
         
          ],
        ),
        )
      ),
      
    
    );
  }

  // ignore: non_constant_identifier_names
  Widget item_packege1(){

  return   Container(
      height: 100,
      width: 399,
      margin: const EdgeInsets.all(15),
     decoration: BoxDecoration(
      color: Colors.grey.withOpacity(0.3),
      borderRadius: BorderRadius.circular(10),
      boxShadow: [
        BoxShadow(
          color: Colors.black12.withOpacity(0.1),
         
        )
      ]
    ),
    child: Row(

      children: [
        Column(
          children: [

            Container(
              height: 100,
              width: 100,
              decoration: const BoxDecoration(
                borderRadius: BorderRadius.all(Radius.circular(10))
              ),
               child: Hero(
                tag: 'tag', 
                child:  Image.asset('assets/images/item/plant0.png',width: 100,height: 100,),)
            ),

          ],
        ),



        Container(
          
          color: const Color.fromARGB(255, 214, 209, 209),
          margin: const EdgeInsets.only(left: 30,),

          child: Row(
            children: [
        
              Container(
                margin: const EdgeInsets.all(5),
                child: RichText(text: const TextSpan(
                  children: [
                    TextSpan(
                      text: 'Lorem ipsum   \n ',
                      style: TextStyle(color: Color.fromARGB(255, 240, 181, 105),fontSize: 20,), 
              
                    ),
                    TextSpan(
                      text: 'Lorem ipsum dolor \nsit amet,\n ',
                      style: TextStyle(color: Color.fromARGB(255, 0, 0, 0),fontSize: 20),
                      
                    ),
                  ]
                )),
              ),
                
                  Container(
                    margin: const EdgeInsets.only(left: 20),
                    child: Icon(Icons.star, color: _changeItemColor1? Colors.yellowAccent:Colors.white,size: 30,)),

            ],
          ),
        ),
      ],
    ),
  );
 
  
 }
  

  // ignore: non_constant_identifier_names
  Widget navigation_plan(){

    return  Container(
              margin: const EdgeInsets.only(left: 20,top: 30,bottom: 15,right: 20),
              child:  Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                 Container(
                  decoration: BoxDecoration(
                    border: Border.all(color: Colors.greenAccent.withOpacity(0.50)),
                    shape: BoxShape.circle
                  ),
                   child: IconButton(onPressed: (){
                  //  Navigator.of(context as BuildContext).pop();
                   }, icon:  const Icon(Icons.navigate_before_outlined,color: Colors.black ,)),
                 ),
                  // Icon(Icons.event_busy,color: Colors.black,)
                ],
              ),
            );
            



  }
  

  // ITEM NAME PLACE 

  Widget all_item_name(plantTitle){

     return  Container(
      margin: EdgeInsets.only(right: 20),
       child: Row(
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  Text(plantTitle,style: TextStyle(color: Colors.black,fontSize: 20),),
              
                ],
              ),
     );
  }

  // ignore: non_constant_identifier_names
  Widget item_size(){

   
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
      children: [
        
         Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            
            item_size_info('nom','largeur','hauteur','type')
              
          ],

        ),


          Column(

          children: [

          item_size_plant( Hero(tag: item, child: Image.asset('assets/images/item/plant0.png')))

          ],
        ),
        
      
      ],
    );

    
  }

  // INFORMATION SUR LE TYPE DE PLANTE
  

  Widget item_size_info(nom,largeur,hauteur,type){
    return Column(
      children: [
        Container(
          margin: const EdgeInsets.only(left: 20,top: 20,right: 20),
          child: RichText(text: TextSpan(
            children: [
              const TextSpan(
                text: 'Name       \n',style: TextStyle(color: Colors.black12,fontSize: 21),
              ),
               TextSpan(
                text: nom,style: const TextStyle(color: Colors.black),
              ),
            ]
          ),
          ),
        ),
        
        
        Container(
          margin: const EdgeInsets.only(left: 20,top: 20,right: 30),
          child: RichText(text: TextSpan(
            children: [
              const TextSpan(
                text: 'Size trom\n',style: TextStyle(color: Colors.black12,fontSize: 21),
              ),
               TextSpan(
                text: largeur,style: const TextStyle(color: Colors.black),
              ),
            ]
          ),
          ),
        ),


        Container(
          margin: const EdgeInsets.only(left: 20,top: 20,right: 30),
          child: RichText(text: TextSpan(
            children: [
              const TextSpan(
                text: 'hauter    \n',style: TextStyle(color: Colors.black12,fontSize: 21),
              ),
               TextSpan(
                text: hauteur,style: const TextStyle(color: Colors.black),
              ),
            ]
          ),
          ),
        ),


        Container(
          margin: const EdgeInsets.only(left: 20,top: 20,right: 30),
          child: RichText(text: TextSpan(
            children: [
              const TextSpan(
                text: 'type       \n',style: TextStyle(color: Colors.black12,fontSize: 21),
              ),
               TextSpan(
                text: type,style: const TextStyle(color: Colors.black),
              ),
            ]
          ),
          ),
        )
        
      ],
    );
  }
  
  // VISUALISATION DE CHAQUE PLANT

  // ignore: non_constant_identifier_names
  Widget item_size_plant(images){
    return Container(
      height: 350,
      width: 250,
      margin: const EdgeInsets.only(right: 5),
      
       child: Image.asset('assets/images/item/plant0.png',width: 50,height: 50,),
    );
  }


   // MORE INFROMATION PLACE

  Widget item_size_more_info(){

    return SingleChildScrollView(
      child:  Container(
      
      margin: const  EdgeInsets.all(20),
      child: Column(
        children: [
         
          const Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text("Plant name",style: TextStyle(color: Colors.black,fontSize: 20),),
            FaIcon(FontAwesomeIcons.heart)
          ],
         ),

          
           Container(
            margin: const EdgeInsets.all(10),
             child: RichText(
              text: const TextSpan(
               children: [
               
           
                 TextSpan(
                  text: 'Lorem ipsum dolor sit amet, consectetur adipiscing'
                  'elit sed do eiusmod tempor incididunt ut labore et dolore'
                  ' magna aliqua enim ad minim veniam, quis nostrud exerci'
                   'tation ullamco laboris nisi ut aliquip ex ea commodo consequat.'
                   ' aute irure dolor  reprehenderit  voluptate velit esse'
                  '   cillum dolore eu fugiat nulla pariatur'
                  ' sint occaecat cupidatat non proident, sunt  culpa qui officia'
                  'deserunt mollit anim id est laborum.ekfjshfkjshkjfhsjfhskfhksf'
                  ,
                  style: TextStyle(color: Color.fromARGB(255, 196, 196, 196))
                  
                )
               ]
             )),
          
           ),



           const Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text("Orignine",style: TextStyle(color: Colors.black,fontSize: 20),),
            FaIcon(FontAwesomeIcons.map)
          ],
         ),

          Container(
            margin: const EdgeInsets.all(10),
             child: RichText(
              text: const TextSpan(
               children: [
               
           
                 TextSpan(
                  text: 'Lorem ipsum dolor sit amet, consectetur adipiscing'
                  'elit sed do eiusmod tempor incididunt ut labore et dolore'
                  ' magna aliqua enim ad minim veniam, quis nostrud exerci'
                   'tation ullamco laboris nisi ut aliquip ex ea commodo consequat.'
                  
                  ,
                  style: TextStyle(color: Color.fromARGB(255, 196, 196, 196))
                  
                )
               ]
             )),
          
           ),






        ],
      ),
    )
 
    );
   
  }

  




  

}


